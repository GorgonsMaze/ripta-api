<!DOCTYPE html>
<html>
<head>
  <title></title>
  <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/lodash.js/4.16.6/lodash.min.js"></script>
  <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.1.1/jquery.min.js"></script>
  <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.15.2/moment.min.js"></script>
  <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-alpha.5/css/bootstrap.min.css" integrity="sha384-AysaV+vQoT3kOAXZkl02PThvDr8HYKPZhNT5h/CXfBThSRXQ6jW5DO2ekP5ViFdi" crossorigin="anonymous">
  <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-alpha.5/js/bootstrap.min.js" integrity="sha384-BLiI7JTZm+JWlgKa0M0kGRpJbF2J8q+qreVrKBC47e3K6BW78kGLrCkeRX6I9RoK" crossorigin="anonymous"></script>
</head>
<body>



<script type="text/javascript">
  $(document).ready(function(){

    var stopsIndexed;
    var tripsIndexed;
    var routesIndexed;

    function tsToTime(ts) {
      return moment.unix(ts).format('h:mma');
    }

    function getStopDetail(id) {
      if (stopsIndexed.hasOwnProperty(id)) {
        return stopsIndexed[id].stop_name;
      }
      return 'Unknown stop id: ' + id;
    }

    function getTripDetail(id) {
      if (tripsIndexed.hasOwnProperty(id)) {
        return tripsIndexed[id];
      }
      return 'Unknown trip id: ' + id;
    }

    function formatDelay(seconds) {
      secondsInt = parseInt(seconds, 10);
      if (seconds === 0) {
        return '(on time)';
      }
      var delay = secondsInt/60;
      var minuteStr = (Math.abs(delay) === 1) ? "minute" : "minutes";
      var modifier = (secondsInt < 0) ? "early" : "late"
      return Math.abs(delay) + " " + minuteStr + " " + modifier;
    }

    function loadStops() {
      $.getJSON('/static/stops', function(stops){
        stopsIndexed = _.keyBy(stops, 'stop_id');
        loadRoutes();
      });
    }

    function loadRoutes() {
     $.getJSON('/static/routes', function(routes){
        routesIndexed = _.keyBy(routes, 'route_id');
        loadTrips();
      });
    }

    function loadTrips() {
     $.getJSON('/static/trips', function(trips){
        tripsIndexed = _.keyBy(trips, 'trip_id');
        processTrips('60');
      });
    }

    function processTrips(route_id) {
      $.getJSON('/api/tripupdates/route/' + route_id + '/outbound', function(trips){
        console.log('Update created at ' + tsToTime(trips.header.timestamp));
        displayTrips(trips);
      });
    }

    function displayTrips(trips) {
      $.each(trips.entity, function(key, trip){
        var thisTrip = trip.trip_update.trip;
        var route_id = thisTrip.route_id;
        var title = "Route " + route_id;
        var trip_id = thisTrip.trip_id;
        var startTime = "Start time: " + moment(thisTrip.start_time, 'HH-mm-ss').format('h:mma');
        var description = getTripDetail(trip_id).trip_headsign;
        var direction_id = getTripDetail(trip_id).direction_id;
        var direction = (direction_id === '0') ? 'Inbound' : 'Outbound';
        console.log('>>>>>>>>>>>>>>>', title, startTime, description, direction, '<<<<<<<<<<<<<<<');

        $.each(trip.trip_update.stop_time_update, function(key, update){
            if (update.arrival === null) {
              var atime = 'Departs ' + tsToTime(update.departure.time);
              var thisStop = getStopDetail(update.stop_id);
              var delayStr = formatDelay(update.departure.delay);
              console.log(atime + ' ' + thisStop + ' ' + delayStr);
            }
            else {
              var atime = tsToTime(update.arrival.time);
              var thisStop = getStopDetail(update.stop_id);
              var delayStr = formatDelay(update.arrival.delay);
              console.log('Arrives ' + atime + ' ' + thisStop + ' ' + delayStr);
            }
        });
      });
    }
    // start
    loadStops();
  });
</script>

</body>
</html>
